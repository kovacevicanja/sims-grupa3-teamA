<Page x:Class="BookingProject.View.CreateTourRequestView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:val="clr-namespace:BookingProject.Validation"
        mc:Ignorable="d"
        Title="" Height="761" Width="736">

    <Page.Background>
        <SolidColorBrush Color="White" />

    </Page.Background>

    <Page.Resources>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="TextBox" x:Key="BoldAndLargeTextBoxStyle">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="434.04"></RowDefinition>
            <RowDefinition Height="0*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Margin="0,9,0,-311" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="241*"/>
                <RowDefinition Height="495*"/>
            </Grid.RowDefinitions>
            <Image Source="ToursImages/createTour1.jpg" Margin="548,4,272,124" />

            <Label Content="Got great ideas for new tours?" FontSize="35" FontWeight="Bold" Foreground="Gray" Margin="100,28,120,134" />
            <Label Content="We hear you!" FontSize="28" FontWeight="Bold" Foreground="LightBlue" Margin="138,68,331,118" />

            <Button Content="Create tour request" IsCancel="True" HorizontalAlignment="Left" Height="36" Margin="120,409,0,0" VerticalAlignment="Top" Width="238"
                Command="{Binding CreateTourRequestCommand}" FontSize="24" Grid.Row="1">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Gray" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Cancel" IsCancel="True" HorizontalAlignment="Left" Height="36" Margin="434,409,0,0" VerticalAlignment="Top" Width="114"
                Command="{Binding CancelCommand}" FontSize="24" Grid.Row="1">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Gray" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Log out" IsCancel="True" HorizontalAlignment="Left" Height="36" Margin="869,10,0,0" VerticalAlignment="Top" Width="116"
                Command="{Binding LogOutCommand}" FontSize="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Gray" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="BorderBrush" Value="LightBlue"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="0" Margin="51,147,51,-180" Grid.RowSpan="2">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="FontSize" Value="24" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="FontSize" Value="24" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
                <Style TargetType="{x:Type DatePicker}">
                    <Setter Property="FontSize" Value="24" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="76.291"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Foreground="Gray" Grid.Row="0" Grid.Column="0" Content="City," Margin="28,0,223,29"/>
            <Label Foreground="Gray" Grid.Column="0" Content="Country" Margin="84,0,97,29"/>
            <Label Foreground="Gray" Grid.Row="1" Grid.Column="0" Content="Description" Margin="28,12,136,12"/>
            <Label Foreground="Gray" Grid.Row="2" Grid.Column="0" Content="Langugage" Margin="28,16,121,9"/>
            <Label Foreground="Gray" Grid.Row="3" Grid.Column="0" Content="Guests number" Margin="28,15,67,15"/>
            <Label Foreground="Gray" Grid.Row="4" Grid.Column="0" Content="Start date" Margin="29,15,164,21" RenderTransformOrigin="0.887,1.009"/>
            <Label Foreground="Gray" Grid.Row="5" Grid.Column="0" Content="End date" Margin="28,7,174,33" RenderTransformOrigin="0.565,0.545"/>

            <TextBox Foreground="Gray" Grid.Row="0" Margin="250,4,214,39" Grid.ColumnSpan="2">
                <TextBox.Text>
                    <Binding Path="City" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <val:CorrectInputCityValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="LightBlue" BorderThickness="2"
                        Width="{Binding ActualWidth, ElementName=txtCity}"
                        Height="{Binding ActualHeight, ElementName=txtCity}"/>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Gray" FontSize="14" HorizontalAlignment="Right" Margin="2"/>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <TextBox Foreground="Gray" Grid.Column="1" Margin="108,4,37,39">
                <TextBox.Text>
                    <Binding Path="Country" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <val:CorrectInputCountryValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="LightBlue" BorderThickness="2"
                        Width="{Binding ActualWidth, ElementName=txtCountry}"
                        Height="{Binding ActualHeight, ElementName=txtCountry}"/>
                            <AdornedElementPlaceholder x:Name="textBox"/>
                            <TextBlock Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Gray" FontSize="14"
                           TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" Margin="2"/>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <TextBox Foreground="Gray" x:Name="txtDescription" Grid.Row="1" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
         Height="78" VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="250,0,37,0"
         AcceptsReturn="True" TextWrapping="Wrap"/>

            <ComboBox Foreground="Gray" Grid.Row="2" ItemsSource="{Binding Languages}" SelectedItem="{Binding ChosenLanguage, UpdateSourceTrigger=PropertyChanged}" Margin="250,18,158,18" Grid.ColumnSpan="2"/>

            <TextBox Foreground="Gray" x:Name="GuestsNumber" Grid.Row="3" Margin="250,0,15,0" Height="36" VerticalAlignment="Center">
                <TextBox.Text>
                    <Binding Path="GuestsNumber" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True" StringFormat='{}{0:#}'>
                        <Binding.ValidationRules>
                            <val:RequiredFieldValidationRule ValidationStep="RawProposedValue"/>
                            <val:IntegerNumberValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Gray" FontSize="14" Margin="0,2,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>

            <DatePicker Foreground="Gray" x:Name="datePickerStartDate" Grid.Row="4" SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}" 
            SelectedDateFormat="Long" DisplayDateStart="{x:Static sys:DateTime.Today}" Margin="174,17,188,23" Grid.ColumnSpan="2">
                <DatePicker.CalendarStyle>
                    <Style TargetType="{x:Type Calendar}">
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="2" ScaleY="2"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.CalendarStyle>
            </DatePicker>

            <DatePicker Foreground="Gray" x:Name="datePickerEndDate" Grid.Row="5" SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged}" 
            SelectedDateFormat="Long" DisplayDateStart="{x:Static sys:DateTime.Today}" Margin="174,10,0,30" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="272">
                <DatePicker.CalendarStyle>
                    <Style TargetType="{x:Type Calendar}">
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="2" ScaleY="2"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.CalendarStyle>
            </DatePicker>

        </Grid>
    </Grid>
</Page>
<Page x:Class="BookingProject.View.ReservationTourView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BookingProject.View" xmlns:val="clr-namespace:BookingProject.Validation"
        mc:Ignorable="d"
        d:DesignHeight="761" d:DesignWidth="736">

    <Page.Background>
        <SolidColorBrush Color="White" />
    </Page.Background>

    <Page.Resources>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="Gray"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="TextBox" x:Key="BoldAndLargeTextBoxStyle">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
    </Page.Resources>

    <Grid Margin="34,34,32,10">
        <Label Foreground="LightBlue" Margin="52,110,52,450" FontSize="36">Make your reservation</Label>

        <Label FontSize="24" Grid.Row="0" Grid.Column="0" Margin="4,272,321,364" Content="Enter the number of guests:"/>
        <TextBox Foreground="Gray" Style="{StaticResource BoldAndLargeTextBoxStyle}" x:Name ="EnteredGuests" Margin="354,277,241,0" Height="36" VerticalAlignment="Top">
            <TextBox.Text>
                <Binding Path="EnteredGuests" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True" StringFormat='{}{0:#}'>
                    <Binding.ValidationRules>
                        <val:RequiredFieldValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"/>
                        <val:IntegerNumberValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Gray" FontSize="14" Margin="0,2,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <Label FontSize="24" Grid.Row="0" Grid.Column="0" Margin="4,342,321,287" Content="Select the date and time:"/>
        <ComboBox Foreground="Gray" x:Name="TourDatesComboBox" Background="LightBlue"
              ItemsSource="{Binding ChosenTour.StartingTime}"
              SelectedItem="{Binding SelectedDate}"
              DisplayMemberPath="StartingDateTime" Margin="354,344,12,297" FontSize="24" FontWeight="Bold" RenderTransformOrigin="0.5,0.5">
            <ComboBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="0"/>
                    <RotateTransform/>
                    <TranslateTransform X="0"/>
                </TransformGroup>
            </ComboBox.RenderTransform>
        </ComboBox>



        <Button Content="Cancel" IsCancel="True" HorizontalAlignment="Left" Height="36" Margin="392,597,0,0" Width="112"
                Command="{Binding CancelCommand}" FontSize="24" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="BorderBrush" Value="LightBlue"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="BorderBrush" Value="LightBlue"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Book tour" IsCancel="True" HorizontalAlignment="Left" Height="36" Margin="130,597,0,0" Width="138"
                Command="{Binding TryToBookCommand}" FontSize="24" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="BorderBrush" Value="LightBlue"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                        <Setter Property="BorderBrush" Value="LightBlue"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Page>
